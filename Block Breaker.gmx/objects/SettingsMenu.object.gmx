<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initalize the main menu
cursor_sprite = spr_cursor;
menu[0] = "DIFFICULTY";
hover = 0;
difficulty_hover = -1;

draw_set_font(font_pirulen);
draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for mouse hover or keyboard
if(!global.no_cursor) {
    if(mouse_x &gt; 180 &amp;&amp; mouse_x &lt; 838 &amp;&amp; mouse_y &gt; 505 &amp;&amp; mouse_y &lt;= 571) {
        hover = 0;
    } else if(mouse_x &gt; 242 &amp;&amp; mouse_x &lt; 784 &amp;&amp; mouse_y &gt; 571 &amp;&amp; mouse_y &lt; 635) {
        hover = 1;
    } else hover = -1;
    
    if(mouse_x &gt; 468 &amp;&amp; mouse_x &lt;= 559 &amp;&amp; mouse_y &gt; 505 &amp;&amp; mouse_y &lt; 571) {
        difficulty_hover = 0;
    } else if(mouse_x &gt; 559 &amp;&amp; mouse_x &lt;= 638 &amp;&amp; mouse_y &gt; 505 &amp;&amp; mouse_y &lt; 571) {
        difficulty_hover = 1;
    } else if(mouse_x &gt; 638 &amp;&amp; mouse_x &lt;= 713 &amp;&amp; mouse_y &gt; 505 &amp;&amp; mouse_y &lt; 571) {
        difficulty_hover = 2;
    } else if(mouse_x &gt; 713 &amp;&amp; mouse_x &lt;= 787 &amp;&amp; mouse_y &gt; 505 &amp;&amp; mouse_y &lt; 571) {
        difficulty_hover = 3;
    } else if(mouse_x &gt; 787 &amp;&amp; mouse_x &lt; 838 &amp;&amp; mouse_y &gt; 505 &amp;&amp; mouse_y &lt; 571) {
        difficulty_hover = 4;
    } else difficulty_hover = -1;
}

if(global.key_up) {
    hover -= 1;
    if(hover &lt; 0) hover = 1;
    global.no_cursor = true;
}
if(global.key_down) {
    hover += 1;
    if(hover &gt; 1) hover = 0;
    global.no_cursor = true;
}
if(global.key_left) {
    if(hover == 0) {
        global.difficulty -= 1;
        if(global.difficulty &lt; 1) global.difficulty = 5;
    }
    global.no_cursor = true;
}
if(global.key_right) {
    if(hover == 0) {
        global.difficulty += 1;
        if(global.difficulty &gt; 5) global.difficulty = 1;
    }
    global.no_cursor = true;
}

// Check for selections
if(global.key_fire_released || global.key_enter) {
    switch(hover) {
        case 0:
            if(difficulty_hover == -1) {
                global.difficulty += 1;
                if(global.difficulty &gt; 5) global.difficulty = 1;
            } else {
                global.difficulty = difficulty_hover + 1;
            }
            break;
        case 1: 
            // Save animation state across rooms
            global.brick_frame = TitleBrick.image_index;
            global.breaker_frame = TitleBreaker.image_index;
            global.breaker_alarm = TitleBreaker.alarm[0];
            // Reset input
            global.key_fire_released = false;
            global.key_enter = false;
            room_goto(rm_main_menu);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw settings menu
draw_set_halign(fa_left);
j = 500;
i = 0
for(i=0; i &lt; 1; i++) {
    if(hover == i) {
        draw_set_colour(make_color_rgb(168, 247, 148));
        draw_text(180, j, menu[i]);
        draw_set_colour(c_white);
    } else {
        draw_text(180, j, menu[i]);
    }
    j += 50;
}

j += 50;
draw_set_halign(fa_center);
if(hover == i) {
    draw_set_colour(make_color_rgb(168, 247, 148));
    draw_text(512, j, "RETURN TO MAIN MENU");
    draw_set_colour(c_white);
} else {
    draw_text(512, j, "RETURN TO MAIN MENU");
}
draw_set_halign(fa_left);

// Draw difficulty numbers
j = 510;
for(i=1; i &lt; 6; i++) {
    if(difficulty_hover == i - 1 || i == global.difficulty) {
        draw_set_colour(make_color_rgb(168, 247, 148));
        draw_text(j, 500, string(i));
        draw_set_colour(c_white);
    } else {
        draw_text(j, 500, string(i));
    }
    j += 75;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
