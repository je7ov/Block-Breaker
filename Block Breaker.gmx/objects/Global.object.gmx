<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables
// Initialize player input
global.key_fire = mouse_check_button_pressed(mb_left);
global.key_reset = keyboard_check_pressed(ord('R'));
global.key_pause = keyboard_check_pressed(vk_space);
global.key_enter = keyboard_check_pressed(vk_enter);
global.key_up = keyboard_check_pressed(vk_up);
global.key_down = keyboard_check_pressed(vk_down);

// Initialize pause variables
paused = false;
takescreen = false;
mouse_x_paused = 0;

// Initialize cursor variables
cursor_sprite = spr_cursor;
global.no_cursor = false;
global.in_game = false;
prev_mouse_x = mouse_x;
prev_mouse_y = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(get_input);

if(!global.in_game &amp;&amp; (mouse_x != prev_mouse_x || mouse_y != prev_mouse_y)) {
    global.no_cursor = false;
}
prev_mouse_x = mouse_x;
prev_mouse_y = mouse_y;

// Change mouse cursor depending on current situation
if(global.no_cursor) {
    window_mouse_set(clamp(window_mouse_get_x(),28,window_get_width()-28),clamp(window_mouse_get_y(),28,window_get_height()-28));
    //window_set_cursor(cr_none);
    cursor_sprite = spr_cursor_none;
} else {
    if(mouse_check_button_pressed(mb_left)) {
        cursor_sprite = spr_cursor_click;
    } else {
        cursor_sprite = spr_cursor;
    }    
}

if(global.key_reset) {
    game_restart();
}

// Pause Section
if(global.key_pause &amp;&amp; room != rm_start) {
    if(paused) {
        // Reactivate everthing and free the paused surface from memory
        instance_activate_all();
        surface_free(pause_surface);
        window_mouse_set(mouse_x_paused, mouse_y);
        global.in_game = true;
        global.no_cursor = true;
        paused = false;
    } else {
        // Get the current surface to display while everthing is deactivated
        pause_surface = surface_create(view_wport[0], view_hport[0]);
        surface_copy(pause_surface, 0, 0, application_surface);
        
        //Deactivate everything for pause
        instance_deactivate_all(true);
        mouse_x_paused = mouse_x;
        global.in_game = false;
        global.no_cursor = false;
        paused = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw frozen surface if paused
if(paused) {
    draw_surface(pause_surface, 0, 0);
    draw_sprite(spr_paused, 0, 512, 480);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
